C:37:"PHPUnit\Runner\DefaultTestResultCache":5740:{a:2:{s:7:"defects";a:39:{s:54:"Controllers\AuthControllerTest::testLoginWithoutParams";i:4;s:49:"Controllers\AuthControllerTest::testLoginComplete";i:4;s:47:"Controllers\CatBreedsControllerTest::testBreeds";i:4;s:51:"Controllers\CatBreedsControllerTest::testShowBreeds";i:4;s:46:"Controllers\UserControllerTest::testCreateUser";i:4;s:60:"Factory\UserFactoryServiceTest::testCreateUserFactoryService";i:4;s:31:"Models\CryptoTest::testMathTrue";i:4;s:33:"Models\CryptoTest::testSaveCrypto";i:4;s:43:"Models\UserTest::testValidateUserEmailValid";i:4;s:28:"RoutesTest::testBasicExample";i:4;s:50:"Services\UserServiceTest::testCreateUserEmailValid";i:4;s:47:"Controllers\CatBreedsControllerTest::testSearch";i:4;s:63:"Controllers\UserControllerTest::testCreateAlreadyExistEmailUser";i:4;s:44:"Controllers\UserControllerTest::testShowUser";i:4;s:50:"Controllers\UserControllerTest::testShowIdNotExist";i:4;s:42:"Controllers\UserControllerTest::testGetAll";i:4;s:46:"Controllers\UserControllerTest::testUpdateUser";i:4;s:52:"Controllers\UserControllerTest::testUpdateIdNotExist";i:4;s:50:"Controllers\UserControllerTest::testDeleteNotExist";i:4;s:46:"Controllers\UserControllerTest::testDeleteUser";i:4;s:36:"Models\QueryCacheTest::testSaveCache";i:4;s:38:"Models\QueryCacheTest::testQueryExists";i:4;s:45:"Models\UserTest::testValidateUserEmailInvalid";i:4;s:41:"Models\UserTest::testCheckEmailExistsTest";i:4;s:34:"Models\UserTest::testCheckIdExists";i:4;s:37:"Models\UserTest::testGeneratePassword";i:4;s:49:"Services\CatBreedServiceTest::testGetBreedService";i:4;s:55:"Services\CatBreedServiceTest::testGetBreedsServiceCache";i:4;s:53:"Services\CatBreedServiceTest::testSearchBreedsService";i:4;s:58:"Services\CatBreedServiceTest::testSearchBreedsServiceCache";i:4;s:42:"Services\UserServiceTest::testGetWrongUser";i:4;s:44:"Services\UserServiceTest::testGetCorrectUser";i:4;s:36:"Services\UserServiceTest::testGetAll";i:4;s:47:"Services\UserServiceTest::testUpdateFalseIdUser";i:4;s:40:"Services\UserServiceTest::testUpdateUser";i:4;s:53:"Services\UserServiceTest::testCreateEmailAlreadyExist";i:4;s:50:"Services\UserServiceTest::testDeleteUserIdNotExist";i:4;s:47:"Services\UserServiceTest::testDeleteUserIdExist";i:4;s:21:"RoutesTest::testRoute";i:4;}s:5:"times";a:60:{s:24:"ConfigTest::testSettings";d:0.004;s:22:"ConfigTest::testConfig";d:0.003;s:54:"Controllers\AuthControllerTest::testLoginWithoutParams";d:0.032;s:49:"Controllers\AuthControllerTest::testLoginComplete";d:0.007;s:50:"Controllers\CatBreedsControllerTest::testConstruct";d:0.001;s:47:"Controllers\CatBreedsControllerTest::testBreeds";d:0.005;s:47:"Controllers\CatBreedsControllerTest::testSearch";d:0.004;s:51:"Controllers\CatBreedsControllerTest::testShowBreeds";d:0.004;s:45:"Controllers\UserControllerTest::testConstruct";d:0.001;s:49:"Controllers\UserControllerTest::testCreateNoInput";d:0.002;s:46:"Controllers\UserControllerTest::testCreateUser";d:0.006;s:63:"Controllers\UserControllerTest::testCreateAlreadyExistEmailUser";d:0.005;s:44:"Controllers\UserControllerTest::testShowUser";d:0.004;s:50:"Controllers\UserControllerTest::testShowIdNotExist";d:0.002;s:42:"Controllers\UserControllerTest::testGetAll";d:0.004;s:46:"Controllers\UserControllerTest::testUpdateUser";d:0.004;s:52:"Controllers\UserControllerTest::testUpdateIdNotExist";d:0.002;s:50:"Controllers\UserControllerTest::testDeleteNotExist";d:0.001;s:46:"Controllers\UserControllerTest::testDeleteUser";d:0.005;s:60:"Factory\UserFactoryServiceTest::testCreateUserFactoryService";d:0.004;s:39:"Models\BaseClassTest::testAbstractClass";d:0.002;s:40:"Models\BaseClassTest::testRequestFactory";d:0.003;s:32:"Models\CryptoTest::testMathFalse";d:0.001;s:31:"Models\CryptoTest::testMathTrue";d:0.005;s:30:"Models\CryptoTest::testEncrypt";d:0.001;s:35:"Models\CryptoTest::testGetPassIsSet";d:0.001;s:35:"Models\CryptoTest::testSetPasswords";d:0;s:33:"Models\CryptoTest::testSaveCrypto";d:0.005;s:34:"Models\CryptoTest::testEncryptFail";d:0.001;s:32:"Models\CryptoTest::testForVerify";d:0.001;s:32:"Models\CurlTest::testSetOptStart";d:0.001;s:34:"Models\CurlTest::testSetOptUrlCurl";d:0.001;s:30:"Models\CurlTest::testCloseCurl";d:0.001;s:36:"Models\QueryCacheTest::testSaveCache";d:0.005;s:38:"Models\QueryCacheTest::testQueryExists";d:0.003;s:30:"Models\TokenTest::testGetToken";d:0.001;s:43:"Models\UserTest::testValidateUserEmailValid";d:0.006;s:45:"Models\UserTest::testValidateUserEmailInvalid";d:0.003;s:41:"Models\UserTest::testCheckEmailExistsTest";d:0.003;s:34:"Models\UserTest::testCheckIdExists";d:0.005;s:37:"Models\UserTest::testGeneratePassword";d:0.003;s:28:"RoutesTest::testBasicExample";d:0.004;s:49:"Services\CatBreedServiceTest::testGetBreedService";d:0.003;s:55:"Services\CatBreedServiceTest::testGetBreedsServiceCache";d:0.005;s:53:"Services\CatBreedServiceTest::testSearchBreedsService";d:0.003;s:58:"Services\CatBreedServiceTest::testSearchBreedsServiceCache";d:0.003;s:50:"Services\EloquentServiceProviderTest::testRegister";d:0.001;s:50:"Services\UserServiceTest::testCreateUserEmailValid";d:0.006;s:42:"Services\UserServiceTest::testGetWrongUser";d:0.004;s:44:"Services\UserServiceTest::testGetCorrectUser";d:0.003;s:36:"Services\UserServiceTest::testGetAll";d:0.005;s:47:"Services\UserServiceTest::testUpdateFalseIdUser";d:0.004;s:40:"Services\UserServiceTest::testUpdateUser";d:0.004;s:53:"Services\UserServiceTest::testCreateEmailAlreadyExist";d:0.004;s:50:"Services\UserServiceTest::testDeleteUserIdNotExist";d:0.004;s:47:"Services\UserServiceTest::testDeleteUserIdExist";d:0.003;s:48:"Traits\GenerateUrlTest::testGenerateUrlForRoutes";d:0.001;s:39:"Traits\GenerateUrlTest::testGenerateUrl";d:0.001;s:21:"RoutesTest::testRoute";d:0.008;s:24:"IndexTest::testBootstrap";d:0.015;}}}